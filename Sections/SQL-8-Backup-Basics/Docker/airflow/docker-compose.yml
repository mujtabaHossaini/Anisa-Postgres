version: '3.3'

x-common:
  &common
  build: .
  image: anisa/airflow:latest-python3.10
  user: "${AIRFLOW_UID}:0"
  restart: on-failure:10
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./backups:/backups
    - ./scripts:/scripts
        
  networks:
      - services

services:
  postgres_airflow:
    image: postgres:13-alpine
    container_name: postgres_airflow
    hostname: postgres_airflow
    # ports:
      # - "5414:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: on-failure:10
    networks:
      - services
    env_file:
      - .env

  scheduler:
    <<: *common
    container_name: airflow-scheduler
    command: scheduler
    ports:
      - "3006:8793"
    depends_on:
      postgres_airflow:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  webserver:
    <<: *common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "3005:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    depends_on:
      postgres_airflow:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
  
  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
networks:
  services:
    name: ${APP_NAME:-anisa}_network
